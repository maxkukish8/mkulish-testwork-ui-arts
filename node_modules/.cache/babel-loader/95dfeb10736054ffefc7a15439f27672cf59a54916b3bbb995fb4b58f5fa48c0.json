{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Shopping Cart\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createVNode($setup[\"ProductList\"], {\n    onAddToCart: $setup.addToCart\n  }), _createVNode($setup[\"ProductCart\"], {\n    cart: $setup.cart,\n    onIncreaseQuantity: $setup.increaseQuantity,\n    onDecreaseQuantity: $setup.decreaseQuantity,\n    onRemoveFromCart: $setup.removeFromCart\n  }, null, 8 /* PROPS */, [\"cart\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","$setup","onAddToCart","addToCart","cart","onIncreaseQuantity","increaseQuantity","onDecreaseQuantity","decreaseQuantity","onRemoveFromCart","removeFromCart"],"sources":["/home/max/Work/projects/mkulish-testwork-ui-arts/src/App.vue"],"sourcesContent":["<template>\n  <h1>Shopping Cart</h1>\n  <div class=\"container\">\n    <ProductList @add-to-cart=\"addToCart\" />\n    <ProductCart\n      :cart=\"cart\"\n      @increase-quantity=\"increaseQuantity\"\n      @decrease-quantity=\"decreaseQuantity\"\n      @remove-from-cart=\"removeFromCart\"\n    />\n  </div>\n</template>\n<script setup>\nimport { ref, onMounted } from \"vue\";\nimport ProductList from \"./components/ProductList.vue\";\nimport ProductCart from \"./components/ProductCart.vue\";\n\n// Кошик\nconst cart = ref([]);\n\n// Функція для збереження кошика в localStorage\nconst saveCartToLocalStorage = () => {\n  localStorage.setItem(\"cart\", JSON.stringify(cart.value));\n};\n\n// Завантаження кошика з localStorage при старті\nonMounted(() => {\n  const savedCart = localStorage.getItem(\"cart\");\n  if (savedCart) {\n    cart.value = JSON.parse(savedCart);\n  }\n});\n\n// Додавання товару до кошика з урахуванням кількості\nconst addToCart = (productWithQty) => {\n  const existingItem = cart.value.find((item) => item.id === productWithQty.id);\n  if (existingItem) {\n    existingItem.quantity += productWithQty.quantity;\n  } else {\n    cart.value.push({ ...productWithQty });\n  }\n  saveCartToLocalStorage(); // Зберігаємо після додавання\n};\n\n// Зміна кількості товару\nconst increaseQuantity = (item) => {\n  item.quantity += 1;\n  saveCartToLocalStorage(); // Зберігаємо після зміни\n};\n\nconst decreaseQuantity = (item) => {\n  if (item.quantity > 1) {\n    item.quantity -= 1;\n  } else {\n    removeFromCart(item);\n  }\n  saveCartToLocalStorage(); // Зберігаємо після зміни\n};\n\n// Видалення товару з кошика\nconst removeFromCart = (item) => {\n  cart.value = cart.value.filter((cartItem) => cartItem.id !== item.id);\n  saveCartToLocalStorage(); // Зберігаємо після видалення\n};\n</script>\n\n<style lang=\"scss\">\n.container,\nh1 {\n  display: flex;\n  padding-left: 15px;\n  padding-right: 15px;\n}\nh1 {\n  margin-top: 20px;\n  margin-bottom: 30px;\n}\n//Mobile styles\n@media screen and (max-width: 768px) {\n  .container {\n    flex-direction: column-reverse;\n  }\n}\n\n//Desktop styles\n@media screen and (min-width: 768px) {\n  .container,\n  h1 {\n    max-width: 1280px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .products {\n    padding-right: 4%;\n  }\n}\n</style>\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAW;;uBAFxBC,mBAAA,CAAAC,SAAA,S,0BACEC,mBAAA,CAAsB,YAAlB,eAAa,sBACjBA,mBAAA,CAQM,OARNC,UAQM,GAPJC,YAAA,CAAwCC,MAAA;IAA1BC,WAAW,EAAED,MAAA,CAAAE;EAAS,IACpCH,YAAA,CAKEC,MAAA;IAJCG,IAAI,EAAEH,MAAA,CAAAG,IAAI;IACVC,kBAAiB,EAAEJ,MAAA,CAAAK,gBAAgB;IACnCC,kBAAiB,EAAEN,MAAA,CAAAO,gBAAgB;IACnCC,gBAAgB,EAAER,MAAA,CAAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}